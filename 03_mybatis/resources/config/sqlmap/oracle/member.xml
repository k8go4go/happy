<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.mlec.member.mapper.MemberMapper">
    <select id="getMemberInfo1" 
            parameterType="string" resultType="Member">
		select id,
		       name,
		       addr,
		       email
		  from mybatis_member
		 where id = #{id}    		    	
    </select>
    <select id="getMemberInfo2" 
            parameterType="Member" resultType="Member">
		select id,
		       name,
		       addr,
		       email
		  from mybatis_member
		 where id = #{id} 
		   and name = #{name}   		    	
    </select>
    
    <select id="getMemberInfo3" 
    		parameterType="string" resultType="string">
    	select name
    	  from mybatis_member
    	 where id = #{id}
    </select>
    
    <select id="getMemberInfo4" resultType="int">
    	select count(*)
    	  from mybatis_member
    </select>
    
    <select id="getMemberList1" resultType="Member">
    	select id,
    	       name,
    	       email,
    	       addr,
    	       join_date as joinDate
    	  from mybatis_member
    	 order by id     
    </select>
    
    <select id="getMemberList2" resultType="string">
    	select name
    	  from mybatis_member
    	 order by id     
    </select>
    
    <resultMap id="memberMap" type="Member">
    	<result column="id" property="id" />
    	<result column="name" property="name" />
    	<result column="addr" property="addr" />
    	<result column="email" property="email" />
    	<result column="join_date" property="joinDate" />
    </resultMap>
    
    <select id="getMemberList3" resultMap="memberMap">
    	select *
    	  from mybatis_member
    	 order by id
    </select>
    
    <insert id="insertMember" parameterType="Member">
    	insert into mybatis_member( 
    		id, name, email, addr
    	) values (
    		#{id}, #{name}, #{email}, #{addr}
    	)
    </insert>
    
    <update id="updateMember" parameterType="Member">
    	update mybatis_member
    	   set name = #{name}
    	 where id = #{id}
    </update>
    
    <delete id="deleteMember" parameterType="string">
    	delete
    	  from mybatis_member
    	 where id = #{id}
    </delete>
    
    <select id="getMemberIteratorList" 
    		parameterType="Member" resultMap="memberMap">
    	select *
    	  from mybatis_member
    	 where addr in <foreach item="addr" collection="addrs"
    	                        open="(" separator="," close=")">
    	 					#{addr}
    	               </foreach>  
    </select>
    
    <sql id="commonMember">
          from mybatis_member
    	 where id = #{id}
    </sql>
    
    <!-- 목록 데이터 -->
    <select id="getMemberIncludeList" 
            parameterType="string" resultMap="memberMap">
    	select *
    	<include refid="commonMember" />
    </select>
    
    <!-- 목록 개수 -->
    <select id="getMemberIncludeListCount" 
            parameterType="string" resultType="int">
    	select count(*)
    	<include refid="commonMember" />
    </select>
    
    <select id="getMemberSearchList" 
            parameterType="Search" resultMap="memberMap">
    	select *
    	  from mybatis_member
    	 <where>
	    	 <choose>
	    	 	<when test="searchType == 'id'">
	    	 		id like '%' || #{searchWord} || '%'
	    	 	</when>
	    	 	<when test="searchType == 'name'">
	    	 		name like '%' || #{searchWord} || '%'
	    	 	</when>
         	 	<otherwise>
	    	 		email like '%' || #{searchWord} || '%'
	    	 	</otherwise>
	    	 </choose>
    	 </where>
    </select>
    
    <select id="getMemberSearchList2" 
            parameterType="Member" resultMap="memberMap">
    	select *
    	  from mybatis_member
    	 <where>
    	 	<if test="id != null">
	    	 	id like '%' || #{id} || '%'
    	 	</if>
    	 	<if test="name != null">
	    	 	and name like '%' || #{name} || '%'
    	 	</if>
    	 </where> 
    </select>
</mapper>

















